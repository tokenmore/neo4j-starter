"use strict";
var _typeof = typeof
    Symbol === "function" && typeof
    Symbol.iterator === "symbol" ? function (t) {
    return typeof t
} : function (t) {
    return t && typeof Symbol === "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
};
(function () {
    var U = {
        graph: {layout_mode: 0, analyse_mode: false, gravitation: .1, repulsion: -400, calculate_state: true},
        node: {node_scale: 1, node_size: 25, node_color: "black", node_opacity: "1"},
        link: {link_scale: 1, link_width: 1, link_color: "#00FFFB", link_type: "slink"},
        show_status: {node_text: true, link_text: true}
    };
    var W = -1;
    var t = {
        nodes: [{
            id: 0,
            label: "Person",
            size: 30,
            properties: {role: "自然人股东", name: "刘德", image: "http://148.70.238.152/static/image/github.png"}
        }, {
            id: 1,
            label: "Company",
            size: 10,
            properties: {registCapi: "5000.000", name: "有品信息科技有限公司", econKind: "有限责任公司(自然人投资或控股)", status: "存续"}
        }, {id: 2, size: 15, label: "Company", properties: {name: "有品信息科技有限公司"}}, {
            id: 3,
            label: "Company",
            properties: {registCapi: "5000.000"}
        }],
        links: [{type: "EMPLOY", source: 0, target: 1, properties: {role: "董事"}}, {
            type: "EMPLOY",
            source: 1,
            target: 2,
            properties: {role: "董事"}
        }, {type: "EMPLOY", source: 2, target: 3, properties: {role: "董事"}}, {
            type: "EMPLOY",
            source: 0,
            target: 2,
            properties: {role: "董事"}
        }]
    };

    function e() {
        return t
    }

    function n(t, e, n, r) {
        W += 1;
        var a = W;
        var o = {nodes: [], links: []};
        o = JSON.parse(JSON.stringify(typeof t !== "undefined" ? t : o));
        var i = d3.forceSimulation().alpha(1).alphaDecay(.002).alphaMin(.002).force("r", null).force("center", d3.forceCenter(typeof arguments[2] !== "undefined" ? n : V.width / 2, typeof arguments[3] !== "undefined" ? r : V.height / 2)).force("link", d3.forceLink().id(function (t) {
            return t.id
        }).strength(U.graph.gravitation)).force("charge", d3.forceManyBody().strength(U.graph.repulsion)).force("collision", d3.forceCollide(U.node.node_size)).on("tick", u).on("end", function () {
            Y()
        });
        var s = d3.forceSimulation().alpha(1).alphaDecay(.01).alphaMin(.002).force("r", d3.forceRadial(100, typeof arguments[2] !== "undefined" ? n : V.width / 2, typeof arguments[3] !== "undefined" ? r : V.height / 2)).force("center", d3.forceCenter(typeof arguments[2] !== "undefined" ? n : V.width / 2, typeof arguments[3] !== "undefined" ? r : V.height / 2)).force("link", d3.forceLink().id(function (t) {
            return t.id
        }).strength(0)).force("collision", d3.forceCollide(U.node.node_size)).on("tick", u).on("end", function () {
            Y()
        });
        var l = X.append("g").attr("id", "network_graph").style("user-select", "none").style("font-size", 7).style("text-anchor", "middle");
        H.call(d3.zoom().scaleExtent([.1, 10]).on("zoom", function () {
            X.attr("transform", d3.event.transform)
        })).on("dblclick.zoom", null);
        l.append("g").attr("id", "temp_layout");
        l.append("g").attr("id", "link_layout");
        l.append("g").attr("id", "node_layout");
        var c = l.append("g").attr("id", "defs_layout");
        c.append("pattern").attr("id", "pattern-0").append("image").attr("xlink:href", "https://www.easyicon.net/api/resizeApi.php?id=1202871&size=128");
        c.append("pattern").attr("id", "pattern-1").append("image").attr("xlink:href", "https://www.easyicon.net/api/resizeApi.php?id=1189598&size=128");
        c.append("pattern").attr("id", "pattern-2").append("image").attr("xlink:href", "https://www.easyicon.net/api/resizeApi.php?id=1158148&size=128");
        c.selectAll("pattern").attr("width", "100%").attr("height", "100%").select("image").attr("width", 20).attr("height", 20);
        var h = [];
        var d = [];
        D(o, e);

        function u() {
            h.attr("transform", function (t) {
                return "translate(" + t.x + "," + t.y + ")"
            });
            d.select(".link-path").attr("d", function (t) {
                return S(t, U.link.link_type)
            });
            d.select("text").attr("dx", function (t) {
                return N(t)
            }).attr("transform", function (t) {
                return O(t)
            });
            Q.selectAll(".link").select(".link-path").attr("d", function (t) {
                return S(t, U.link.link_type)
            });
            Q.selectAll(".link").select("text").attr("dx", function (t) {
                return N(t)
            }).attr("transform", function (t) {
                return O(t)
            })
        }

        function f(t) {
            h = l.select("#node_layout").selectAll("g").data(t);
            h.exit().remove();
            var e = h.enter().append("g").attr("class", "node").attr("transform", function (t) {
                return "x" in t && "y" in t ? "translate(" + t.x + ", " + t.y + ")" : ""
            }).on("mousedown.select-node", k).on("mouseenter.enter-node", g).on("mouseleave.leave-node", x).on("dblclick", m).call(d3.drag().on("start", A).on("drag", E).on("end", P));
            e.append("circle").attr("class", "background-circle").style("cursor", "move").style("stroke-opacity", "0").style("stroke-width", "16px").style("stroke", "#68bdf6bf");
            e.append("circle").attr("class", "foreground-circle").style("fill", "#1e98ce").style("cursor", "move").style("stroke-width", "3px").style("stroke", "#18769f");
            h = h.merge(e);
            h.selectAll("circle").attr("r", function (t) {
                if (!("size" in t)) {
                    t["size"] = U.node.node_size
                }
                return t.size * U.node.node_scale
            });
            p()
        }

        function p() {
            var e = arguments[0] ? arguments[0] : "label";
            h.select("text").remove();
            h.filter(function (t) {
                return typeof t.label !== "undefined" ? true : false
            }).append("text").attr("x", function (t) {
                return y(d3.select(this), t[e])
            }).attr("dy", ".35em").style("display", U.show_status.node_text === true ? "block" : "none").style("pointer-events", "none").style("fill", "white").text(function (t) {
                return t.label
            })
        }

        function y(t, e) {
            var n = 0;
            try {
                n = e.length
            } catch (t) {
                console.log("Warning: nodes缺少name标签！");
                return
            }
            if (n <= 4) {
                t.append("tspan").attr("x", 0).attr("y", 2).text(e)
            } else {
                var r = e.substring(0, 4);
                var a = e.substring(4, 9);
                var o = e.substring(9, n);
                var i = -9;
                var s = 2;
                var l = 10;
                if (n < 10) {
                    i += 5;
                    s += 5
                } else {
                    o = e.substring(9, 11) + "..."
                }
                t.text("");
                t.append("tspan").attr("x", 0).attr("y", i).text(function () {
                    return r
                });
                t.append("tspan").attr("x", 0).attr("y", s).text(function () {
                    return a
                });
                t.append("tspan").attr("x", 0).attr("y", l).text(function () {
                    return o
                })
            }
        }

        function v(t, e) {
            var n = e.selectAll("g").data(t);
            n.exit().remove();
            var r = n.enter().append("g").attr("class", "link");
            r.append("path").attr("class", "link-path").style("fill", "none").style("cursor", "pointer").style("stroke", "#6f7071").style("stroke-width", "4px");
            r.append("marker").attr("class", "link-marker").attr("markerUnits", "userSpaceOnUse").attr("viewBox", "0 -50 100 100").attr("refY", 0).attr("markerWidth", 12).attr("markerHeight", 12).attr("orient", "auto").append("path").attr("d", "M20,0 L0,-30 L90,0 L0,30 L20,0").style("fill", "#000000");
            r.append("text").attr("class", "link-text").attr("dx", function (t) {
                return N(t)
            }).attr("dy", 2).attr("transform", function (t) {
                return O(t)
            }).append("textPath").style("fill", "#000000").style("display", U.show_status.link_text === true ? "block" : "none");
            n = n.merge(r);
            n.select("marker").attr("id", function (t) {
                return "marker-" + t.index
            }).attr("refX", function (t) {
                return t.target.size * 10 + 70
            });
            n.select(".link-path").attr("id", function (t) {
                return "link" + a + "-" + t.index
            }).attr("d", function (t) {
                return S(t, U.link.link_type)
            }).attr("marker-end", function (t) {
                return "url(#marker-" + t.index + ")"
            }).style("stroke-width", function (t) {
                if (!("width" in t)) {
                    t["width"] = U.link.link_width
                }
                return t.width
            }).on("mousedown.select-link", _).on("mouseover.hover-link", b);
            n.select("textPath").text(function (t) {
                return t.type
            }).attr("href", function (t) {
                return "#link" + a + "-" + t.index
            });
            arguments[2] ? "" : d = n
        }

        function k(t) {
            Y();
            t["selected"] = true;
            d3.select(this).classed("selected", true)
        }

        function m(r) {
            var t = (r.size ? r.size : U.node.size) + 8;
            var e = t + 30;
            var n = Math.cos(175 / 360 * Math.PI);
            var a = Math.sin(175 / 360 * Math.PI);
            var o = Math.cos(55 / 360 * Math.PI);
            var i = Math.sin(55 / 360 * Math.PI);
            var s = -(2 * o + 2 * Math.sqrt(3) * i);
            var l = Math.pow(o, 2) + 3 * Math.pow(i, 2) + 2 * Math.sqrt(3) * o * i - 3 * Math.pow(e, 2);
            var c = (Math.sqrt(Math.pow(s, 2) - 16 * l) - s) / 8;
            var d = Math.sqrt(Math.pow(e, 2) - Math.pow(c, 2));
            var u = n;
            var f = Math.sqrt(1 - Math.pow(u, 2));
            var p = "M" + t * n + ", -" + t * a + " " + "A" + t + ", " + t + " 0 0, 1 " + t * o + ", " + t * i + "L" + c + "," + d + " " + "A" + e + ", " + e + " 0 0, 0 " + e * u + ", -" + e * f + "L" + t * n + ",-" + t * a;
            d3.selectAll(".menu").remove();
            var y = d3.select(this).selectAll(".menu").data([0, 1, 2]).enter().append("g").attr("class", "menu");
            y.append("path").attr("id", function (t, e) {
                return "menu-path" + e
            }).attr("d", p).attr("transform", function (t, e) {
                return "rotate(" + e * 120 + " 0, 0)"
            }).style("fill", "#bcbcbc").style("stroke", "#000000").style("stroke-width", 0).on("mouseenter", function () {
                d3.select(this).style("stroke-width", 1).style("fill", "#bcbcbca1")
            }).on("mouseleave", function () {
                d3.select(this).style("stroke-width", 0).style("fill", "#bcbcbc")
            }).on("click.menu", function (t) {
                var e = d3.select(this.parentNode.parentNode).datum();
                if (t === 0) {
                    w(r)
                } else if (t === 1) {
                    var n = d3.select("#temp_layout").append("line").attr("x1", r.x).attr("y1", r.y).style("stroke", "#6f7071").style("stroke-width", "2px").style("opacity", "0");
                    H.on("mousemove.add-link", function () {
                        var t = q("#container");
                        var e = t.k;
                        n.attr("x2", (d3.event.x - V.x - t.x) / e).attr("y2", (d3.event.y - V.y - t.y) / e);
                        n.style("opacity", 1)
                    });
                    h.selectAll("circle").style("cursor", "pointer").on("click.add-link", function (t) {
                        n.remove();
                        H.on("mousemove.add-link", null);
                        h.selectAll("circle").style("cursor", "move").on("click.add-link", null);
                        J(e, t, "TEST")
                    })
                } else if (t === 2) {
                    K(r)
                }
            });
            y.append("rect").attr("class", "menu-icon").attr("id", function (t, e) {
                return "menu-icon-" + e
            }).attr("width", "20").attr("height", "20").style("fill", function (t, e) {
                return "url(#pattern-" + e + ")"
            }).style("pointer-events", "none");
            d3.select("#menu-icon-0").attr("transform", "translate(" + (e - 28) + ", -" + 6 * e / 16 + ")");
            d3.select("#menu-icon-1").attr("transform", "translate(-10," + (e - 28) + ")");
            d3.select("#menu-icon-2").attr("transform", "translate(" + (7 - e) + ", -" + 6 * e / 16 + ")")
        }

        function g(t) {
            console.log(t);
            d3.select(this).select(".background-circle").style("stroke-opacity", .8)
        }

        function x(t) {
            d3.select(this).select(".background-circle").style("stroke-opacity", 0)
        }

        function w(t) {
        }

        function _() {
        }

        function b() {
        }

        var M = false, z = [], L = [];

        function A(t) {
            d3.event.sourceEvent.stopPropagation();
            Y();
            z = h.filter(function (t) {
                return t.selected
            });
            L = d.filter(function (e) {
                var n = false;
                z.each(function (t) {
                    if (t.id === e.source.id || t.id === e.target.id) {
                        n = true
                    }
                });
                return n
            })
        }

        function E(t) {
            z.attr("transform", function (t) {
                t.x += d3.event.dx;
                t.y += d3.event.dy;
                return "translate(" + t.x + "," + t.y + ")"
            });
            L.select("path").attr("d", function (t) {
                return S(t, U.link.link_type)
            });
            L.select("text").attr("dx", function (t) {
                return N(t)
            }).attr("transform", function (t) {
                return O(t)
            });
            if (M === false) {
                C(h, z);
                C(d, L);
                M = true
            }
            Q.selectAll(".link").select(".link-path").attr("d", function (t) {
                return S(t, U.link.link_type)
            });
            Q.selectAll(".link").select("text").attr("dx", function (t) {
                return N(t)
            }).attr("transform", function (t) {
                return O(t)
            })
        }

        function P(t) {
            d3.event.sourceEvent.stopPropagation();
            if (!d3.event.sourceEvent.ctrlKey) {
                t.selected = false;
                d3.select(this).classed("selected", false)
            }
            h.style("opacity", 1);
            d.style("opacity", 1);
            M = false
        }

        function C(t, e) {
            t.style("opacity", .3);
            e.style("opacity", 1)
        }

        function S(t, e) {
            if (t.source === t.target) {
                var n = typeof t.source.size === "undefined" ? U.node.node_size : t.source.size;
                var r = t.source.x + n * U.node.node_scale / 4 * 3;
                var a = t.source.y + n * U.node.node_scale / 4;
                var o = t.source.x + n * U.node.node_scale / 4;
                var i = t.source.y + n * U.node.node_scale / 4 * 3;
                var s = r + 150;
                var l = a;
                var c = o;
                var d = i + 150;
                return "M" + r + " " + a + "C" + s + " " + l + ", " + c + " " + d + ", " + o + " " + i
            }
            var u = null;
            var f = t.source.x;
            var p = t.source.y;
            var y = t.target.x;
            var h = t.target.y;
            var v = (y - f) / 8;
            var k = (h - p) / 8;
            var m = f + v;
            var g = p + k;
            var x = f + v * 2;
            var w = p + k * 2;
            var _ = f + v * 3;
            var b = p + k * 3;
            var M = f + v * 4;
            var z = p + k * 4;
            var L = f + v * 7;
            var A = p + k * 6;
            if (e === "slink") {
                u = "M" + f + "," + p + " L" + y + "," + h
            } else if (e === "clink") {
                u = "M " + f + "," + p + " C" + m + "," + w + " " + x + "," + b + " " + M + "," + z + " S" + L + "," + A + " " + y + "," + h
            } else if (e === "hlink") {
                u = "M " + f + "," + p + " L" + M + "," + p + " " + " L" + M + "," + h + " L" + y + "," + h
            } else if (e === "vlink") {
                u = "M " + f + "," + p + " L" + f + "," + z + " " + " L" + y + "," + z + " L" + y + "," + h
            }
            return u
        }

        function N(t) {
            var e = t.source.x;
            var n = t.source.y;
            var r = t.target.x;
            var a = t.target.y;
            var o = Math.sqrt(Math.pow(r - e, 2) + Math.pow(a - n, 2));
            return o / 2
        }

        function O(t) {
            var e = t.source.x;
            var n = t.source.y;
            var r = t.target.x;
            var a = t.target.y;
            return e <= r ? "" : "rotate(180, " + (e + r) / 2 + " " + (n + a) / 2 + ")"
        }

        function q(t) {
            var e = d3.select(t).attr("transform");
            var n = e && /translate/.test(e) && /scale/.test(e) && e.match(/translate\(([^\)]+)\)\s?scale\(([^\)]+)/);
            var r = n && n[1].split(",") || [0, 0];
            var a = n && n[2] || 1;
            var o = e && /rotate/.test(e) && e.match(/\s?rotate\(([^\)]+)/);
            var i = o && o[1] || 0;
            var s = r[0];
            var l = r[1];
            return {x: s, y: l, k: a, rotate: i}
        }

        function D(t, e) {
            if (e === "force") {
                i.nodes(t.nodes).force("link").links(t.links)
            } else if (e === "radius") {
                s.nodes(t.nodes).force("link").links(t.links)
            }
            f(t.nodes);
            v(t.links, l.select("#link_layout"))
        }

        function B() {
            return o
        }

        function I() {
            U.graph.calculating = true;
            d3.select("#network-status").style("animation", "calc ease 1s infinite");
            i.alpha(1).restart()
        }

        function Y() {
            U.graph.calculating = false;
            d3.select("#network-status").style("animation", "none");
            i.stop()
        }

        function j(t) {
            U.graph.layout_mode = t
        }

        function F(t) {
            U.graph.analyse_mode = t
        }

        function G(t, e, n) {
            t["x"] = arguments[1] ? e : V.width / 2;
            t["y"] = arguments[2] ? n : V.height / 2;
            o.nodes.push(t);
            D(o)
        }

        function J(e, n, t) {
            var r = e, a = n;
            if ((typeof e === "undefined" ? "undefined" : _typeof(e)) !== "object") {
                h.each(function (t) {
                    if (t.id == e) {
                        r = t
                    }
                })
            }
            if ((typeof n === "undefined" ? "undefined" : _typeof(n)) !== "object") {
                h.each(function (t) {
                    if (t.id == n) {
                        a = t
                    }
                })
            }
            o.links.push({source: r, target: a, type: t});
            D(o)
        }

        function K(e) {
            if ((typeof e === "undefined" ? "undefined" : _typeof(e)) !== "object") {
                h.each(function (t) {
                    if (t.id == e) {
                        e = t
                    }
                })
            }
            o.nodes.splice(e.index, 1);
            o.links = t.links.filter(function (t) {
                return t.source !== e && t.target !== e
            });
            h.filter(function (t) {
                return t === e
            }).remove();
            d.filter(function (t) {
                return t.source === e || t.target === e
            }).remove()
        }

        function R(t) {
            o.links.splice(t.index, 1);
            var e = t.source.id, n = t.target.id;
            d.each(function (t) {
                if (t.source.id === e && t.target.id === n) {
                    d3.select(this).remove()
                }
            })
        }

        function T(n, t) {
            t.forEach(function (e) {
                o.nodes.forEach(function (t) {
                    if (t.id === e.source) {
                        e.source = t
                    } else if (t.id === e.target) {
                        e.target = t
                    }
                });
                var t = n.getData();
                t.nodes.forEach(function (t) {
                    if (t.id === e.source) {
                        e.source = t
                    } else if (t.id === e.target) {
                        e.target = t
                    }
                })
            });
            console.log(t);
            v(t, Q, "0")
        }

        return {
            getData: B,
            startLayout: I,
            stopLayout: Y,
            changeLayoutMode: j,
            changeAnalyseMode: F,
            addNode: G,
            removeNode: K,
            addLink: J,
            removeLink: R,
            connectGraph: T
        }
    }

    var H = null, X = null, Q = null;
    var V = Object();

    function r(t) {
        H = d3.select("#" + (typeof t !== "undefined" ? t : "body"));
        H.on("click", function () {
            d3.selectAll(".menu").remove()
        });
        X = H.append("g").attr("id", "container");
        Q = X.append("g").attr("id", "connect_layout");
        V = document.getElementById(t).getBoundingClientRect();
        return {getDemoData: e, drawNetworkGraph: n}
    }

    window.NetworkGraph = r
})();